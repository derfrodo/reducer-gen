// This file has been generated by reducer-gen (@Stefan Pauka) written in 2020 / 2021.

import { State } from "./../state";
import { getDemoDefaultState } from "./../defaultState.base.generated";
import { DemoReducerActions } from "./../reducerActions/reducerActions.main.generated";

import { DEMO_ACTIONS_BASE as actions } from "./../actions/actions.base.generated";
// import { DEMO_ACTIONS_EXTENDED as actions } from "./../actions/actions.extended";

// Uncomment for some typechecking:
// import { isDemoReducerActionsExtended } from "./../reducerActions/reducerActions.extended";
// import { isDemoReducerActionsBase } from "./../reducerActions/reducerActions.base.generated";

export const demoReducerExtended = (
  state: State = getDemoDefaultState(),
  action: DemoReducerActions
): State => {
  switch (action.type) {
    case actions.DEMO_SET_CLICKED:
      return {
        ...state,
        // ...(action.next ? {alertText: "Benachrichtigung!"} : {alertText: "keine Benachrichtigung"}),
        // [action payload]
      };
    //         case extendedActions["[actionName]"]:
    //             return {
    //                 ...state,
    //                 // [action payload]
    //              };
    default:
      return state;
  }
};

export default demoReducerExtended;
