import {{#if state.hasStateAsDefaultExport}}{{state.stateName}}{{else}}{ {{state.stateName}} }{{/if}} from "./../state";
import { {{state.getDefaultStateMethodName}} } from "./../{{moduleNames.base.defaultState}}";
import { {{reducerActions.mainReducerActionsName}} } from "./../reducerActions/{{moduleNames.main.reducerActions}}";

{{#each state.importsWithAdditionalLevel}}
// {{this}}
{{/each}}

// import { {{actions.baseActionsEnumName}} as actions } from "./../actions/{{moduleNames.base.actions}}";
// import { {{actions.extendedActionsEnumName}} as actions } from "./../actions/{{moduleNames.extended.actions}}";

// Uncomment for some typechecking:
// import { {{reducerActions.extendedReducerTypeguard}} } from "./../reducerActions/{{moduleNames.extended.reducerActions}}";
// import { {{reducerActions.baseReducerTypeguard}} } from "./../reducerActions/{{moduleNames.base.reducerActions}}";

export const {{reducer.extendedReducerName}} = (state: {{state.stateName}} = {{state.getDefaultStateMethodName}}(), action: {{reducerActions.mainReducerActionsName}}): {{state.stateName}} => {
    switch (action.type) {
        //         case actions["[actionName]"]:
        //             return {
        //                 ...state,
        //                 // [action payload]
        //            };
        //         case extendedActions["[actionName]"]:
        //             return {
        //                 ...state,
        //                 // [action payload]
        //              };
        default:
            return state;
    }
};

export default {{reducer.extendedReducerName}};
