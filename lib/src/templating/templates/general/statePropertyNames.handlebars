import type {{#if state.hasStateAsDefaultExport}}{{state.stateName}}{{else}}{ {{state.stateName}} }{{/if}} from "./state";

export const {{featureName.pascalCase}}StateProperties: { [key in keyof {{state.stateName}}]: key } = Object.freeze({
{{#each state.properties}}    {{name}}: "{{name}}",
{{/each}}
});

export enum {{featureName.pascalCase}}StatePropertiesEnum {
{{#each state.properties}}    {{name}} = "{{name}}",
{{/each}}
}

export function isKeyof{{featureName.pascalCase}}State(propertyName: any): propertyName is keyof {{state.stateName}} {
    return (
        typeof propertyName === "string" ||
        typeof propertyName === "number" ||
        typeof propertyName === "symbol"
        ) &&
        ({{#each state.properties}}
            propertyName === "{{name}}"{{#unless @last}} ||{{/unless}}{{/each}}
        )
}
